/**!
 * @Project: angular-hitmands-auth
 * @Authors: Giuseppe Mandato <gius.mand.developer@gmail.com>
 * @Link: https://github.com/hitmands/angular-hitmands-auth
 * @License: MIT
 * @Date: 2014-10-29
 * @Version: 0.0.1
***/

!function(a,b){"use strict";function c(a){var c=this,d=null,e=null,f={login:"/users/login",logout:"/users/logout",fetch:"/users/me",authenticationRedirect:"/login"},g={login:{success:"hitmands.auth:login.resolved",error:"hitmands.auth:login.rejected"},logout:{success:"hitmands.auth:logout.resolved",error:"hitmands.auth:logout.rejected"},fetch:{success:"hitmands.auth:fetch.resolved",error:"hitmands.auth:fetch.rejected"},update:"hitmands.auth:update"};this.useRoutes=function(a){return b.isObject(a)&&(f=b.extend(f,a)),this},this.getLoggedUser=function(){return d};var h=function(){return b.isObject(c.getLoggedUser())},i=function(){return e};this.setLoggedUser=function(a){b.isObject(a)||(a=null,e=null),d=b.copy(a);try{e=d.token}catch(c){}return this},this.tokenizeHttp=function(c){return(!b.isString(c)||c.length<1)&&(c="X-AUTH-TOKEN"),a.interceptors.push(function(){return{request:function(a){return h()&&b.isObject(a)&&a.hasOwnProperty("headers")&&(a.headers[c]=i()),a}}}),this},this.$get=["$rootScope","$q","$http","$state",function(a,d,e,j){var k=function(b){c.setLoggedUser(b),a.$broadcast(g.update,c.getLoggedUser(),h())};return{login:function(b){return e.post(f.login,b,{cache:!1}).then(function(b){return k(b.data),a.$broadcast(g.login.success,b),b},function(b){return k(null),a.$broadcast(g.login.error,b),b})},fetchLoggedUser:function(){return e.get(f.fetch,{cache:!1}).then(function(b){return k(b.data),a.$broadcast(g.fetch.success,b),b},function(b){return k(null),a.$broadcast(g.fetch.error,b),b})},logout:function(){return e.post(f.logout,null,{cache:!1}).then(function(b){return k(null),a.$broadcast(g.logout.success,b),b},function(b){return k(null),a.$broadcast(g.logout.error,b),b})},getCurrentUser:function(){return c.getLoggedUser()},isUserLoggedIn:function(){return h()},authorize:function(a){return!b.isNumber(a.authLevel)||a.authLevel<1?!0:h()?(c.getLoggedUser().authLevel||0)>=a.authLevel:!1},authenticationRedirect:function(){j.transitionTo(f.authenticationRedirect,{},{inherit:!1})},getAuthenticationToken:function(){return i()}}}]}function d(a){var c=null;return{restrict:"A",link:function(d,e,f){var g=d[f.authLogin];try{c=d[e.attr("name")]}catch(h){}e.bind("submit",function(d){b.isObject(g)?b.isObject(c)&&c.hasOwnProperty("$invalid")&&c.$invalid?d.preventDefault():a.login(g):d.preventDefault()})}}}function e(a){return function(b,c){c.bind("click",function(){a.logout()})}}c.$inject=["$httpProvider"],d.$inject=["AuthService"],e.$inject=["AuthService"],b.module("hitmands.auth",["ui.router"]).run(["$rootScope","AuthService","$state","$location",function(a,c,d,e){var f=null;a.$on("hitmands.auth:login.resolved",function(){b.isObject(f)&&c.authorize(f.state)&&d.transitionTo(f.state.name,f.params),f=null}),a.$on("hitmands.auth:fetch.resolved",function(){b.isObject(f)&&c.authorize(f.state)&&d.transitionTo(f.state.name,f.params),f=null}),a.$on("$stateChangeStart",function(b,d,g,h,i){if(!c.authorize(d)){var j=c.isUserLoggedIn();if(a.$broadcast("$stateChangeError",d,g,h,i,{statusCode:403,statusText:"Forbidden",isUserLoggedIn:j}),!h.name&&j)return e.path("/");if(b.preventDefault(),!h.name||!j)return f={state:d,params:g},c.authenticationRedirect()}}),a.$on("hitmands.auth:update",function(){c.authorize(d.current)||c.authenticationRedirect()})}]),b.module("hitmands.auth").provider("AuthService",c),b.module("hitmands.auth").directive("authLogin",d).directive("authLogout",e)}(window,angular);
